parameters:
  - name: azureSubscription
    type: string
  - name: environment
    type: string
  - name: environmentName
    type: string

stages:
  - stage: deploy_${{ parameters.environmentName }}
    jobs:
      - deployment: deploy_${{ parameters.environmentName }}
        environment: ${{ parameters.environment }}

        workspace:
          clean: all

        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: AzureCLI@2
                  displayName: deploy_${{ parameters.environmentName }}_bicep
                  inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      $config = (Get-Content params/${{ parameters.environmentName }}.json | ConvertFrom-Json)

                      $deploymentName = "geolocationconsumers-${{ parameters.environmentName }}-$($config.parameters.parInstance.value)"

                      az deployment sub create `
                        --name $deploymentName `
                        --template-file bicep/apiConsumers.bicep `
                        --location $config.parameters.parLocation.value `
                        --parameters @params/apiConsumers.${{ parameters.environmentName }}.json

                - task: AzureCLI@2
                  displayName: SetAppRolesForConsumers
                  inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      $config = (Get-Content params/${{ parameters.environmentName }}.json | ConvertFrom-Json)

                      $apiName = "geolocation-api-$($config.parameters.parEnvironment.value)-$($config.parameters.parInstance.value)"
                      $apiId = (az ad app list --filter "displayName eq '$apiName'" --query '[].appId') | ConvertFrom-Json
                      $resourceId = (az ad sp list --filter "appId eq '$apiId'" --query '[0].id') | ConvertFrom-Json
                      $apiSpn = (az rest -m GET -u https://graph.microsoft.com/v1.0/servicePrincipals/$resourceId) | ConvertFrom-Json
                      $appRoleId = ($apiSpn.appRoles | Where-Object { $_.displayName -eq "LookupApiUser" }).id

                      $config.parameters.parExternalApiConsumers.value | ForEach-Object {
                        Write-Host "Granting app role to principal: $($_.PrincipalId)"
                        . "./scripts/GrantPrincipalAppRole.ps1" -principalId $_.PrincipalId -resourceId $resourceId -appRoleId $appRoleId
                      }