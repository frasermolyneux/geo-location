@using MX.GeoLocation.Web.Extensions
@using MX.GeoLocation.Web.Models
@model LookupAddressViewModel

@{
    ViewData["Title"] = "Lookup Address";
}

<!-- Page Header -->
<div class="hero-section fade-in">
    <h1 class="display-4 mb-3">
        <svg class="icon icon-xl me-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8" />
            <path d="m21 21-4.35-4.35" />
        </svg>
        IP Address Lookup
    </h1>
    <p class="lead">Enter any IP address or domain to discover its geographic location and details</p>
</div>

<!-- Search Form -->
<div class="form-section fade-in">
    <h2>
        <svg class="icon me-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
            <circle cx="12" cy="10" r="3" />
        </svg>
        Search Location
    </h2>

    <form asp-controller="Home" asp-action="LookupAddress" method="post" autocomplete="off">
        <div class="input-group">
            <svg class="input-icon icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="11" cy="11" r="8" />
                <path d="m21 21-4.35-4.35" />
            </svg>
            <input asp-for="@Model.AddressData" class="form-control"
                placeholder="Enter IP address or domain (e.g., 8.8.8.8 or google.com)"
                aria-label="IP address or domain">
            <button class="btn btn-primary" type="submit" id="search">
                <svg class="icon icon-sm me-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="11" cy="11" r="8" />
                    <path d="m21 21-4.35-4.35" />
                </svg>
                Lookup
            </button>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="mt-3">
                <div class="alert alert-danger" role="alert">
                    <div class="d-flex align-items-start">
                        <svg class="icon icon-sm me-2 mt-1 flex-shrink-0" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="10" />
                            <line x1="15" y1="9" x2="9" y2="15" />
                            <line x1="9" y1="9" x2="15" y2="15" />
                        </svg>
                        <div class="flex-grow-1">
                            <h6 class="alert-heading mb-2">Please correct the following errors:</h6>
                            <div class="small">
                                @Html.ValidationSummary(false)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </form>

    <div class="mt-3">
        <p class="text-muted mb-0">
            <svg class="icon icon-sm me-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10" />
                <line x1="12" y1="16" x2="12" y2="12" />
                <line x1="12" y1="8" x2="12.01" y2="8" />
            </svg>
            Enter an IP address (IPv4 or IPv6) or domain name to retrieve detailed geographic information.
        </p>
    </div>
</div>

@if (Model.GeoLocationDto != null)
{
    <!-- Results Section -->
    <div class="result-card fade-in">
        <div class="result-header">
            <img src="~/images/flags/@(Model.GeoLocationDto.CountryCode?.ToLower()).png"
                alt="@Model.GeoLocationDto.CountryCode" class="result-flag" />
            <div>
                <h2 class="mb-1">@Model.AddressData</h2>
                <p class="text-muted mb-0">Located in @Model.GeoLocationDto.LocationSummary()</p>
            </div>
            <div class="status-indicator status-success ms-auto">
                <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="20,6 9,17 4,12" />
                </svg>
                Found
            </div>
        </div>

        <div class="row">
            <!-- Map Section -->
            <div class="col-lg-8 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6" />
                                <line x1="8" y1="2" x2="8" y2="18" />
                                <line x1="16" y1="6" x2="16" y2="22" />
                            </svg>
                            Geographic Location
                        </h3>
                    </div>
                    <div class="card-body p-0">
                        <div id="map" style="height: 450px; width: 100%;"></div>
                    </div>
                </div>
            </div>

            <!-- Location Details -->
            <div class="col-lg-4 mb-4">
                <div class="card h-100 location-details-card">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                <polyline points="14,2 14,8 20,8" />
                                <line x1="16" y1="13" x2="8" y2="13" />
                                <line x1="16" y1="17" x2="8" y2="17" />
                                <polyline points="10,9 9,9 8,9" />
                            </svg>
                            Details
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-borderless location-details-table">
                                <tbody>
                                    <tr>
                                        <td class="text-muted">
                                            <div class="d-flex align-items-center">
                                                <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" stroke-width="2">
                                                    <circle cx="12" cy="12" r="10" />
                                                    <circle cx="12" cy="12" r="6" />
                                                    <circle cx="12" cy="12" r="2" />
                                                </svg>
                                                Accuracy Radius
                                            </div>
                                        </td>
                                        <td class="fw-medium">@Model.GeoLocationDto.AccuracyRadius KM</td>
                                    </tr>
                                    <tr>
                                        <td class="text-muted">
                                            <div class="d-flex align-items-center">
                                                <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" stroke-width="2">
                                                    <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                                                    <circle cx="12" cy="10" r="3" />
                                                </svg>
                                                Coordinates
                                            </div>
                                        </td>
                                        <td class="fw-medium">@Model.GeoLocationDto.Latitude,
                                            @Model.GeoLocationDto.Longitude</td>
                                    </tr>
                                    <tr>
                                        <td class="text-muted">
                                            <div class="d-flex align-items-center">
                                                <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" stroke-width="2">
                                                    <rect x="2" y="3" width="20" height="14" rx="2" ry="2" />
                                                    <line x1="8" y1="21" x2="16" y2="21" />
                                                    <line x1="12" y1="17" x2="12" y2="21" />
                                                </svg>
                                                IP Address
                                            </div>
                                        </td>
                                        <td class="fw-medium">
                                            <div class="d-flex align-items-center gap-2">
                                                @Model.GeoLocationDto.FlagImage()
                                                @Model.GeoLocationDto.TranslatedAddress
                                            </div>
                                        </td>
                                    </tr>
                                    @if (!string.IsNullOrEmpty(Model.GeoLocationDto.PostalCode))
                                    {
                                        <tr>
                                            <td class="text-muted">
                                                <div class="d-flex align-items-center">
                                                    <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none"
                                                        stroke="currentColor" stroke-width="2">
                                                        <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" />
                                                        <circle cx="12" cy="10" r="3" />
                                                    </svg>
                                                    Postal Code
                                                </div>
                                            </td>
                                            <td class="fw-medium">@Model.GeoLocationDto.PostalCode</td>
                                        </tr>
                                    }
                                    <tr>
                                        <td class="text-muted">
                                            <div class="d-flex align-items-center">
                                                <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none"
                                                    stroke="currentColor" stroke-width="2">
                                                    <circle cx="12" cy="12" r="10" />
                                                    <polyline points="12,6 12,12 16,14" />
                                                </svg>
                                                Timezone
                                            </div>
                                        </td>
                                        <td class="fw-medium">@Model.GeoLocationDto.Timezone</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div class="mt-3">
                            <button class="btn btn-outline w-100" type="button" data-bs-toggle="collapse"
                                data-bs-target="#traits" aria-expanded="false" aria-controls="traits">
                                <svg class="icon icon-sm me-1" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                    stroke-width="2">
                                    <polyline points="6,9 12,15 18,9" />
                                </svg>
                                View All Traits
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Traits Section -->
    <div class="collapse" id="traits">
        <div class="card">
            <div class="card-header">
                <h3 class="mb-0 d-flex align-items-center gap-2">
                    <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2" />
                        <path d="M9 9h6v6H9z" />
                    </svg>
                    Additional Location Traits
                </h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">
                                    <svg class="icon icon-sm me-1" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                        stroke-width="2">
                                        <path
                                            d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" />
                                    </svg>
                                    Trait
                                </th>
                                <th scope="col">
                                    <svg class="icon icon-sm me-1" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                        stroke-width="2">
                                        <polyline points="22,12 18,12 15,21 9,3 6,12 2,12" />
                                    </svg>
                                    Value
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var trait in Model.GeoLocationDto.Traits.Where(trait =>
                                                    !string.IsNullOrWhiteSpace(trait.Value)))
                            {
                                <tr>
                                    <td class="text-muted">@trait.Key</td>
                                    <td class="fw-medium">@trait.Value</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            function initMap() {
                var myLatLng = {
                    lat: @Model.GeoLocationDto.Latitude,
                    lng: @Model.GeoLocationDto.Longitude
                                                };

                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 8,
                    center: myLatLng,
                    styles: [
                        {
                            "featureType": "all",
                            "elementType": "geometry.fill",
                            "stylers": [
                                {
                                    "weight": "2.00"
                                }
                            ]
                        },
                        {
                            "featureType": "all",
                            "elementType": "geometry.stroke",
                            "stylers": [
                                {
                                    "color": "#9c9c9c"
                                }
                            ]
                        },
                        {
                            "featureType": "all",
                            "elementType": "labels.text",
                            "stylers": [
                                {
                                    "visibility": "on"
                                }
                            ]
                        },
                        {
                            "featureType": "landscape",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "color": "#f2f2f2"
                                }
                            ]
                        },
                        {
                            "featureType": "landscape",
                            "elementType": "geometry.fill",
                            "stylers": [
                                {
                                    "color": "#ffffff"
                                }
                            ]
                        },
                        {
                            "featureType": "landscape.man_made",
                            "elementType": "geometry.fill",
                            "stylers": [
                                {
                                    "color": "#ffffff"
                                }
                            ]
                        },
                        {
                            "featureType": "poi",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "visibility": "off"
                                }
                            ]
                        },
                        {
                            "featureType": "road",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "saturation": -100
                                },
                                {
                                    "lightness": 45
                                }
                            ]
                        },
                        {
                            "featureType": "road",
                            "elementType": "geometry.fill",
                            "stylers": [
                                {
                                    "color": "#eeeeee"
                                }
                            ]
                        },
                        {
                            "featureType": "road",
                            "elementType": "labels.text.fill",
                            "stylers": [
                                {
                                    "color": "#7b7b7b"
                                }
                            ]
                        },
                        {
                            "featureType": "road",
                            "elementType": "labels.text.stroke",
                            "stylers": [
                                {
                                    "color": "#ffffff"
                                }
                            ]
                        },
                        {
                            "featureType": "road.highway",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "visibility": "simplified"
                                }
                            ]
                        },
                        {
                            "featureType": "road.arterial",
                            "elementType": "labels.icon",
                            "stylers": [
                                {
                                    "visibility": "off"
                                }
                            ]
                        },
                        {
                            "featureType": "transit",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "visibility": "off"
                                }
                            ]
                        },
                        {
                            "featureType": "water",
                            "elementType": "all",
                            "stylers": [
                                {
                                    "color": "#46bcec"
                                },
                                {
                                    "visibility": "on"
                                }
                            ]
                        },
                        {
                            "featureType": "water",
                            "elementType": "geometry.fill",
                            "stylers": [
                                {
                                    "color": "#c8d7d4"
                                }
                            ]
                        },
                        {
                            "featureType": "water",
                            "elementType": "labels.text.fill",
                            "stylers": [
                                {
                                    "color": "#070707"
                                }
                            ]
                        },
                        {
                            "featureType": "water",
                            "elementType": "labels.text.stroke",
                            "stylers": [
                                {
                                    "color": "#ffffff"
                                }
                            ]
                        }
                    ]
                });

                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map,
                    title: '@Model.AddressData Location',
                    icon: {
                        path: google.maps.SymbolPath.CIRCLE,
                        fillColor: '#3b82f6',
                        fillOpacity: 1,
                        strokeColor: '#ffffff',
                        strokeWeight: 3,
                        scale: 8
                    }
                });

                // Add info window
                var infoWindow = new google.maps.InfoWindow({
                    content: `
                                                        <div style="padding: 10px; font-family: 'Inter', sans-serif;">
                                                            <h6 style="margin: 0 0 8px 0; color: #1e293b;">@Model.GeoLocationDto.LocationSummary()</h6>
                                                            <p style="margin: 0; color: #64748b; font-size: 14px;">@Model.AddressData</p>
                                                            <p style="margin: 4px 0 0 0; color: #64748b; font-size: 12px;">Accuracy: @Model.GeoLocationDto.AccuracyRadius KM</p>
                                                        </div>
                                                    `
                });

                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });

                // Auto-open info window
                setTimeout(function () {
                    infoWindow.open(map, marker);
                }, 1000);
            }

            // Initialize map when page loads
            document.addEventListener('DOMContentLoaded', function () {
                if (typeof google !== 'undefined') {
                    initMap();
                }
            });
        </script>

        <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQPUe4GXdBSQe-VFwBpkJta5oDbQbihTk&signed_in=false&callback=initMap"></script>
    }
}
