@using MX.GeoLocation.Web.Models
@model BatchLookupViewModel

@{
    ViewData["Title"] = "Batch Lookup";
}

@if (Model.GeoLocationCollectionDto != null)
{
    <row>
        <div class="text-center">
            <div class="col-sm-12">
                <div id="map" style="height: 450px; width: 100%;"></div>
            </div>
        </div>
    </row>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Address</th>
                                    <th scope="col">Accuracy Radius (KM)</th>
                                    <th scope="col">Lat, Long</th>
                                    <th scope="col">Postal Code</th>
                                    <th scope="col">Timezone</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var geoLocationDto in Model.GeoLocationCollectionDto.Entries)
                                {
                                    <tr>
                                        <td class="fw-medium">
                                            <div class="d-flex align-items-center gap-2">
                                                <img src="~/images/flags/@(geoLocationDto.CountryCode?.ToLower()).png"
                                                    alt="@geoLocationDto.CountryCode" class="result-flag" />
                                                @geoLocationDto.TranslatedAddress
                                            </div>
                                        </td>
                                        <td class="fw-medium">@geoLocationDto.AccuracyRadius</td>
                                        <td class="fw-medium">@geoLocationDto.Latitude, @geoLocationDto.Longitude</td>
                                        <td class="fw-medium">@(geoLocationDto.PostalCode ?? "unknown")</td>
                                        <td class="fw-medium">@geoLocationDto.Timezone</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <row>
        <div>
            <hr />
        </div>
    </row>
}

<row>
    <h1 id="pageTitle">@ViewData["Title"]</h1>

    <form asp-controller="Home" asp-action="BatchLookup" method="post" autocomplete="false">
        <div class="input-group">
            <textarea asp-for="@Model.AddressData" class="form-control" rows="10"></textarea>
            <span>
                <button class="btn btn-primary" type="submit" id="search">
                    <svg class="icon icon-sm" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="11" cy="11" r="8" />
                        <path d="m21 21-4.35-4.35" />
                    </svg>
                </button>
            </span>
        </div>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3" role="alert">
                <div class="d-flex align-items-start">
                    <svg class="icon icon-sm me-2 mt-1 flex-shrink-0" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                        stroke-width="2">
                        <circle cx="12" cy="12" r="10" />
                        <line x1="15" y1="9" x2="9" y2="15" />
                        <line x1="9" y1="9" x2="15" y2="15" />
                    </svg>
                    <div>
                        <h6 class="alert-heading mb-2">Please correct the following errors:</h6>
                        @Html.ValidationSummary(false, "", new { @class = "validation-summary-compact mb-0" })
                    </div>
                </div>
            </div>
        }
    </form>
</row>

<row>
    <p>
        <svg class="icon icon-sm me-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10" />
            <path d="M12 16v-4" />
            <path d="M12 8h.01" />
        </svg>
        Enter a line separated list of domains or IP addresses to retrieve the geo-data.
    </p>
</row>

@if (Model.GeoLocationCollectionDto != null)
{
    @section Scripts {
        <script>
            function initMap() {

                var map = new google.maps.Map(document.getElementById('map'),
                    {
                        zoom: 2,
                        center: { lat: 0.00, lng: 0.00 }
                    });

                var locations = [
                                                                        @foreach (var geoLocationDto in Model.GeoLocationCollectionDto.Entries)
                    {
                        <text>
                            [
                            '@geoLocationDto.Address',
                                                                                                                @geoLocationDto.Latitude,
                            @geoLocationDto.Longitude
                            ],
                        </text>
                                                                        }
                                                                    ];

                for (count = 0; count < locations.length; count++) {
                    new google.maps.Marker({
                        position: new google.maps.LatLng(locations[count][1], locations[count][2]),
                        map: map,
                        title: locations[count][0]
                    });
                }
            }
        </script>

        <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQPUe4GXdBSQe-VFwBpkJta5oDbQbihTk&signed_in=false&callback=initMap"></script>
    }

}

